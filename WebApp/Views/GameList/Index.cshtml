@model GamePlatformBL.ViewModels.PagedGameViewModel

@{
    ViewData["Title"] = "Game List";
}


@if (Model.Games == null || !Model.Games.Any())
{
    <h2 class="text-danger">No games for you</h2>
    <p>Looks like you are too picky! We currently do not have any games with the selected filter, choose another filter!</p>
    <button class="btn btn-outline-danger mt-3" onclick="history.back()">Go Back</button>
}
else
{
    <h2 class="text-danger">Games</h2>
    <div id="filteredGamesContainer">
        @await Html.PartialAsync("_FilteredGamesPartial", Model)
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            const selectedGameTypeId = @Model.SelectedGameTypeId;
            const selectedGenreIds = @Html.Raw(Json.Serialize(Model.SelectedGenreIds));

            function loadFilteredGames(page) {
                $.ajax({
                    type: "POST",
                    url: "/GameList/GetFilteredGamesAjax",
                    data: {
                        selectedGameTypeId: selectedGameTypeId,
                        selectedGenreIds: selectedGenreIds,
                        page: page
                    },
                    success: function (html) {
                        $("#filteredGamesContainer").html(html).fadeIn();;
                        bindPaginationButtons();
                    },
                    error: function () {
                        alert("Failed to load filtered games.");
                    }
                });
            }

            function bindPaginationButtons() {
                $(".filtered-page-btn").off("click").on("click", function (e) {
                    e.preventDefault();
                    const page = $(this).data("page");
                    loadFilteredGames(page);
                });
            }

            bindPaginationButtons();
        });
    </script>
}
